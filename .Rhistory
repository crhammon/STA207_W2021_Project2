"birthday",
"birthyear",
"g1schid", # school ID?
"g1tchid", # teacher ID?
"g1classsize",
"g1classtype",
"g1tmathss")]) # assuming this stands for scaled score (ss)
# get complete cases
RowsTotal = nrow(STAR_G1)
STAR_G1 = STAR_G1[complete.cases(STAR_G1[,c("g1schid",
"g1tchid", # teacher ID?
"g1classsize",
"g1classtype",
"g1tmathss")]),]
RowsComplete = nrow(STAR_G1)
PercComplete = 100*RowsComplete/RowsTotal
# make summary
STAR_G1$g1schid = as.factor(STAR_G1$g1schid)
STAR_G1$g1classtype = as.factor(STAR_G1$g1classtype)
STAR_G1$race = as.character(STAR_G1$race)
STAR_G1$gender = as.character(STAR_G1$gender)
STAR_G1[STAR_G1$g1classtype==1,'classtype'] = 'Small'
STAR_G1[STAR_G1$g1classtype==2,'classtype'] = 'Regular'
STAR_G1[STAR_G1$g1classtype==3,'classtype'] = 'Reg. W/Aide'
STAR_G1[STAR_G1$gender==1,'gender1'] = 'Male'
STAR_G1[STAR_G1$gender==2,'gender1'] = 'Female'
STAR_G1[(STAR_G1$race==1) & (!is.na(STAR_G1$race)) ,'race1'] = 'White'
STAR_G1[(STAR_G1$race==2) & (!is.na(STAR_G1$race)) ,'race1'] = 'Black'
STAR_G1[(STAR_G1$race==3) & (!is.na(STAR_G1$race)) ,'race1'] = 'Asian'
STAR_G1[(STAR_G1$race==4) & (!is.na(STAR_G1$race)) ,'race1'] = 'Hispanic'
STAR_G1[(STAR_G1$race==5) & (!is.na(STAR_G1$race)) ,'race1'] = 'Native American'
STAR_G1[(STAR_G1$race==6) & (!is.na(STAR_G1$race)) ,'race1'] = 'Other'
subset1 = STAR_G1[,c('g1tmathss','g1classsize','birthyear','classtype','race1','gender1')]
table1 = tbl_summary(data = subset1,
by = classtype,
type = all_continuous() ~ "continuous2",
statistic = list(all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25},{p75})",
"{min}",
"{max}"),
all_categorical() ~ "{n} ({p}%)"),
digits = all_continuous() ~ 1,
label = list(g1tmathss ~ "Scaled Math Scores",
g1classsize ~ "Class Size",
birthyear ~ "Birth Year",
classtype ~ "Class Type",
race1 ~ "Race",
gender1 ~ "Gender"),
missing_text = "(Missing)")
as_gt(table1)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_NP.R', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
source('C:/Users/Charles/Dropbox/Graduate/Courses/(5) Winter 2021/STA 207/Projects/Project 2/STA207_W2021_Project2/ExploratoryAnalysis_CH.r', echo=TRUE)
data(Fatalities, package = "AER")
fit1 <- lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
summary(fit1)$coefficients[1:6,]
# not reporting states
data(Fatalities, package = "AER")
fit1 <- lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year -1,
data = Fatalities)
summary(fit1)$coefficients[1:6,]
# not reporting states
data(Fatalities, package = "AER")
fit1 <- lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year ,
data = Fatalities)
summary(fit1)$coefficients[1:6,]
# not reporting states
data(Fatalities, package = "AER")
fit1 <- lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year - 1,
data = Fatalities)
summary(fit1)$coefficients[1:6,]
# not reporting states
knitr::opts_chunk$set(echo = TRUE)
data(Fatalities, package = "AER")
fit1 <- lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
summary(fit1)$coefficients[1:6,]
# not reporting states
data(Fatalities, package = "AER")
fit1 <- lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
summary(fit1)$coefficients[1:6,] # not reporting states
fit_2 <- lm(I(fatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
fit_2 <- lm(I(fatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
p-lot(fit_2)
fit_2 <- lm(I(fatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(fit_2)
fit_2 <- lm(I(fatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
# summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(fit_2)
fit_2 = lm(I(fatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(fit_2)
fit_2 = lm(I(fatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
# plot(fit_2)
fit_2 = lm(I(fatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(fit_2)
fit_2 = lm(I(fatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(residuals(fit_2))
fit_2 = lm(I(fatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(residuals(fit_2))
qqnorm(residuals(fit_2))
fit_2 = lm(I(fatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(residuals(fit_2))
qqnorm(residuals(fit_2))
qqline(residuals(fit_2))
fit_2 = lm(I(fatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(residuals(fit_2))
qqnorm(residuals(fit_2))
# qqline(residuals(fit_2))
fit_2 = lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(residuals(fit_2))
qqnorm(residuals(fit_2))
# qqline(residuals(fit_2))
fit_2 = lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(residuals(fit_2))
qqnorm(residuals(fit_2))
qqline(residuals(fit_2))
fit_2 = lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
# summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(residuals(fit_2))
qqnorm(residuals(fit_2))
qqline(residuals(fit_2))
fit_2 = lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(residuals(fit_2))
qqnorm(residuals(fit_2))
qqline(residuals(fit_2))
fit_2 = lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year-1,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(residuals(fit_2))
qqnorm(residuals(fit_2))
qqline(residuals(fit_2))
knitr::opts_chunk$set(fig.pos = 'H')
# clear environment
rm(list=ls())
# Clear all plotsfee
try(dev.off(dev.list()["RStudioGD"]),silent=TRUE)
try(dev.off(),silent=TRUE)
# load packages
library(tidyverse)
library(haven)
library(car)
library(gtsummary)
# read in data
STAR_Stud = read_sav("Proj1DATA\\PROJECT STAR\\STAR_Students.sav")
STAR_G1 = as.data.frame(STAR_Stud[,c("stdntid",
"gender",
"race",
"birthmonth",
"birthday",
"birthyear",
"g1schid",
"g1tchid",
"g1classsize",
"g1classtype",
"g1tmathss")])
# get complete cases
RowsTotal = nrow(STAR_G1)
STAR_G1 = STAR_G1[complete.cases(STAR_G1[,c("g1schid",
"g1tchid", # teacher ID?
"g1classsize",
"g1classtype",
"g1tmathss")]),]
RowsComplete = nrow(STAR_G1)
PercComplete = 100*RowsComplete/RowsTotal
# make summary
STAR_G1$g1schid = as.factor(STAR_G1$g1schid)
STAR_G1$g1classtype = as.factor(STAR_G1$g1classtype)
STAR_G1$race = as.character(STAR_G1$race)
STAR_G1$gender = as.character(STAR_G1$gender)
STAR_G1[STAR_G1$g1classtype==1,'classtype'] = 'Small'
STAR_G1[STAR_G1$g1classtype==2,'classtype'] = 'Regular'
STAR_G1[STAR_G1$g1classtype==3,'classtype'] = 'Reg. W/Aide'
STAR_G1[STAR_G1$gender==1,'gender1'] = 'Male'
STAR_G1[STAR_G1$gender==2,'gender1'] = 'Female'
STAR_G1[(STAR_G1$race==1) & (!is.na(STAR_G1$race)) ,'race1'] = 'White'
STAR_G1[(STAR_G1$race==2) & (!is.na(STAR_G1$race)) ,'race1'] = 'Black'
STAR_G1[(STAR_G1$race==3) & (!is.na(STAR_G1$race)) ,'race1'] = 'Asian'
STAR_G1[(STAR_G1$race==4) & (!is.na(STAR_G1$race)) ,'race1'] = 'Hispanic'
STAR_G1[(STAR_G1$race==5) & (!is.na(STAR_G1$race)) ,'race1'] = 'Native American'
STAR_G1[(STAR_G1$race==6) & (!is.na(STAR_G1$race)) ,'race1'] = 'Other'
subset1 = STAR_G1[,c('g1tmathss','g1classsize','birthyear','classtype','race1','gender1')]
table1 = tbl_summary(data = subset1,
by = classtype,
type = all_continuous() ~ "continuous2",
statistic = list(all_continuous() ~ c("{mean} ({sd})",
"{median} ({p25},{p75})",
"{min}",
"{max}"),
all_categorical() ~ "{n} ({p}%)"),
digits = all_continuous() ~ 1,
label = list(g1tmathss ~ "Scaled Math Scores",
g1classsize ~ "Class Size",
birthyear ~ "Birth Year",
classtype ~ "Class Type",
race1 ~ "Race",
gender1 ~ "Gender"),
missing_text = "(Missing)")
as_gt(table1)
data(Fatalities, package = "AER")
fit1 <- lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year - 1,
data = Fatalities)
summary(fit1)$coefficients[1:6,]
# not reporting states
fit_2 = lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year-1,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(residuals(fit_2))
qqnorm(residuals(fit_2))
# qqline(residuals(fit_2))
fit_2 = lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year-1,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
# plot(residuals(fit_2))
# qqnorm(residuals(fit_2))
# qqline(residuals(fit_2))
fit_2 = lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year-1,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(residuals(fit_2))
# qqnorm(residuals(fit_2))
# qqline(residuals(fit_2))
fit_2 = lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year-1,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(residuals(fit_2))
qqnorm(residuals(fit_2))
# qqline(residuals(fit_2))
fit_2 = lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year-1,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(residuals(fit_2))
qqnorm(residuals(fit_2))
qqline(residuals(fit_2))
fit_2 = lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year-1,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(fit_2)
fit_2 = lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year-1,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(fit_2,which = 1)
# plot(residuals(fit_2))
#
# qqnorm(residuals(fit_2))
# qqline(residuals(fit_2))
fit_2 = lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year-1,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(fit_2,which = 2)
fit_2 = lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year-1,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(fit_2,which = 3)
# plot(residuals(fit_2))
#
# qqnorm(residuals(fit_2))
# qqline(residuals(fit_2))
fit_2 = lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year-1,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(fit_2,which = 4)
# plot(residuals(fit_2))
#
# qqnorm(residuals(fit_2))
# qqline(residuals(fit_2))
fit_2 = lm(I(afatal/pop*100000) ~ beertax + drinkage + breath + jail
+ service + state + year-1,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(fit_2,which = 5)
# plot(residuals(fit_2))
#
# qqnorm(residuals(fit_2))
# qqline(residuals(fit_2))
fit_2 = lm(afatal/pop*100000 ~ beertax + drinkage + breath + jail
+ service + state + year-1,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(fit_2,which = 2)
# plot(residuals(fit_2))
#
# qqnorm(residuals(fit_2))
# qqline(residuals(fit_2))
fit_2 = lm(afatal/pop*100000 ~ beertax + drinkage + breath + jail
+ service + state + year-1,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(fit_2)
# plot(residuals(fit_2))
#
# qqnorm(residuals(fit_2))
# qqline(residuals(fit_2))
```{r,echo=FALSE,include=TRUE}
plot(fit_2,which=1)
plot(fit_2,which=2)
plot(fit_1,which=3)
plot(fit_1,which=3)
knitr::opts_chunk$set(fig.pos = 'H')
# clear environment
rm(list=ls())
# Clear all plotsfee
try(dev.off(dev.list()["RStudioGD"]),silent=TRUE)
try(dev.off(),silent=TRUE)
# load packages
library(tidyverse)
library(haven)
library(car)
library(gtsummary)
data(Fatalities, package = "AER")
beertax_1982 <- Fatalities[Fatalities$year == 1982, c('state', 'beertax')]
colnames(beertax_1982) <- c('state', 'beertax_1982')
Fatalities <- merge(Fatalities, beertax_1982, by = 'state')
Fatalities$beertax_change <- Fatalities$beertax - Fatalities$beertax_1982
fit1 <- lm(I(afatal/pop*100000) ~ + state + year + beertax_change + drinkage + breath + jail
+ service  - 1,
data = Fatalities)
summary(fit1)$coefficients[55:59,]
# not reporting states
fit2 <- lm(I(fatal/pop*100000) ~ + state + year + beertax_change + drinkage + breath + jail
+ service - 1,
data = Fatalities)
summary(fit2)$coefficients[55:59,]
# not reporting states
fit_2 = lm(afatal/pop*100000 ~ beertax + drinkage + breath + jail
+ service + state + year-1,
data = Fatalities)
summary(fit_2)$coefficients[1:6,]
# not reporting states
plot(fit_1,which=1)
plot(fit_1,which=3)
plot(fit_1,which=2)
plot(fit1,which=5)
plot(fit1,which=3)
plot(fit1,which=2)
fit2 <- lm(fatal/pop*100000 ~ + state + year + beertax_change + drinkage + breath + jail
+ service - 1,
data = Fatalities)
summary(fit2)$coefficients[55:59,]
# not reporting states
plot(fit1,which=2)
plot(fit1,which=1)
install.packages('gtools')
install.packages('qwraps2')
install.packages('shiny')
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("leaflet")
install.packages("usmap")
knitr::opts_chunk$set(fig.pos = 'H')
# clear environment
rm(list=ls())
# Clear all plotsfee
try(dev.off(dev.list()["RStudioGD"]),silent=TRUE)
try(dev.off(),silent=TRUE)
# load packages
library(tidyverse)
library(haven)
library(car)
library(gtsummary)
library(AER)
data("Fatalities")
library(gtools)
summary <-
list("Drinking Age" =
list("Mean" = ~ round(mean(drinkage), 2)),
"Mandatory Community Service" =
list("Count" = ~ table(service)[2]),
"Mandatory Jail Sentence" =
list("Count" = ~ table(jail)[2]),
"Preliminary Breath Test Law" =
list("Count" = ~ table(breath)[2]))
library(qwraps2)
library(dplyr)
options(qwraps2_markup = 'markdown')
table <- summary_table(group_by(Fatalities, year), summary)
table
# Seeing which states change in breath testt
# results <- as.data.frame(rbind(table(Fatalities$state, Fatalities$breath)))
# changes <- results[which(results$no != 0 & results$yes != 0),]
library(ggplot2)
unempus <- Fatalities %>%
group_by(year) %>%
distinct(unempus)
ggplot(unempus, aes(year, unempus)) +
geom_bar(stat = "identity") +
xlab("Year") +
ylab("US Unemployment Rate") +
labs(title = "US Unemployment Rate by Year")
emppopus <- Fatalities %>%
group_by(year) %>%
distinct(emppopus)
ggplot(emppopus, aes(year, emppopus)) +
geom_bar(stat = "identity") +
xlab("Year") +
ylab("US Employment/Population Ratio") +
labs(title = "US Employment Population Ratio by Year")
library(shiny)
